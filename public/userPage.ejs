<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>GrantMatcher - User Page</title>
    <%- head %>
</head>
<% if (theuser.length == 0 || !['manager', 'developer'].includes(role) || theuser.role == 'developer') { %>
<body>
<% } else { %>
<body style="background-color: rgb(255, 214, 214);">
<% } %>
    <!-- Navigation (sticky header). Links and dropdown collapse into a hamburger menu when the screen size is small. -->
    <nav class="navbar navbar-expand-lg navbar-dark px-3" id="navbar">
        <!-- Brand on the left -->
        <a class="navbar-brand bigBrand" href="/" id="navbar-brand">Grant Matcher</a>

        <!-- Toggler (for mobile view) -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" id="navbar-toggler">
            <span class="navbar-toggler-icon"></span>
        </button>

        <!-- Navbar links on the right -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                <!-- Links here -->
                <li class="nav-item">
                    <a class="nav-link" href="/">Dashboard</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/tickets">Tickets</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/tutorial">Tutorial</a>
                </li>

                <!-- Dropdown (user menu) -->
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa fa-user-circle-o"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                        <li><a class="dropdown-item" href="/profile">Profile</a></li>
                        <li><a class="dropdown-item" href="/settings">Settings</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <!-- Logout button (opens a modal) -->
                        <li><button class="dropdown-item" id="modalBtn1" onclick="openModal(1)">Logout</button></li>
                    </ul>
                </li>
            </ul>
        </div>
    </nav>

    <!-- The modal the logout button in the navigation bar opens -->
    <div id="modal1" class="modal">
        <div class="modal-body">
            <div class="together">
                <h2>Log out</h2>
                <!-- Numbering the IDs so I can use many modals (code reuse) -->
                <span class="close" id="close1">&times;</span>
            </div>
            
            <!-- Confirmation message (for user control) -->
            <p>Are you sure you want to log out?</p>
            <div style="display: flex">
                <form method="post" action="/">
                    <input type="submit" value="Logout!" class="buttonStyle">
                </form>
                <button id='cancel1' class="buttonStyle">Cancel</button>
            </div>
        </div>
    </div>

    <!-- Error modal -->
    <div id="modal2" class="modal">
        <div class="modal-body">
            <div class="together">
                <h2>Error!</h2>
                <!-- Numbering the IDs so I can use many modals (code reuse) -->
                <span class="close" id="close2">&times;</span>
            </div>
            
            <p id="showAlert"><%= showAlert %></p>
        </div>
    </div>

    <!-- Delete account modal -->
    <div id="modal3" class="modal">
        <div class="modal-body">
            <div class="together">
                <h2>Delete Account</h2>
                <!-- Numbering the IDs so I can use many modals (code reuse) -->
                <span class="close" id="close3">&times;</span>
            </div>
            
            <label><b>REASON FOR DELETION</b></label>
            <p>Why do you want to delete this user? This action cannot be undone and their data will be permanently deleted.</p>
            <textarea style="width: 100%" id="deleteReason" rows="6" class="form-control"></textarea>
            <button style="width: 100%" class="buttonStyle pink" onclick="deleteAccount()">Delete this User</button>
            <button style="width: 100%" class="buttonStyle blue" id="cancel3">Cancel</button>
        </div>
    </div>

    <!-- suspend account modal -->
    <div id="modal4" class="modal">
        <div class="modal-body">
            <div class="together">
                <h2>Suspend User</h2>
                <!-- Numbering the IDs so I can use many modals (code reuse) -->
                <span class="close" id="close4">&times;</span>
            </div>

            <% if (!['manager', 'developer', 'user'].includes(theuser.role)) { %>
                <!-- They are suspended -->
                
                <% 
                // get suspension details
                suspensionDetails = theuser.role.split(':')

                // get suspension details
                duration = parseInt(suspensionDetails[1])
                date = suspensionDetails[2]
                returnRole = suspensionDetails[3] 

                if (duration == NaN) { duration = 0 }

                // get date unsuspended
                date = new Date(date.split('-')[2], parseInt(date.split('-')[1]) - 1, date.split('-')[0])

                // separate the parts of the date and ensure month and day are always two digits (e.g., 05 not 5)
                year = date.getFullYear()
                month = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(date)
                day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date)

                // stringify it
                dateString = `${day}-${month}-${year}`

                // get date of unsuspension
                unsuspended = new Date()
                unsuspended.setDate(date.getDate() + duration);

                // separate the parts of the date and ensure month and day are always two digits (e.g., 05 not 5)
                year = unsuspended.getFullYear()
                month = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(unsuspended)
                day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(unsuspended)

                // stringify it
                unsuspendedString = `${day}-${month}-${year}`
                %>
                <!-- display suspension details -->
                <p>This user has already been suspended since <%= dateString %>. They will be automatically unsuspended once they login to the site at any time after <%= unsuspendedString %>. 
                    They will return as a <%= returnRole %> after <%= duration %> days of suspension. If you submit this form, it will override the previous suspension details.</p>
            <% } %>

            <div class="together">
                <div style="width: 100%">
                    <label><b>SUSPENSION DURATION 
                        <button type="button" class="btn" data-toggle="tooltip" data-placement="top" title="How many days until they are unsuspended?">
                            <!-- Makes the tooltip circular -->
                            <i class="fa fa-question" style="border-radius: 70%; border: 2px solid black; padding: 1px 5px 1px 4px;"></i>
                        </button>
                    </b></label>
                    <input type="number" min="0" id="suspensionLength" class="form-control" style="width: 100%">
                </div>
                <div style="width: 100%">
                    <label><b>RETURNING ROLE
                        <button type="button" class="btn" data-toggle="tooltip" data-placement="top" title="The role they will return as when they are unsuspended.">
                            <!-- Makes the tooltip circular -->
                            <i class="fa fa-question" style="border-radius: 70%; border: 2px solid black; padding: 1px 5px 1px 4px;"></i>
                        </button>
                    </b></label>
                    <select id="suspensionRole" style="width: 100%" class="form-control" style="width: 100%">
                        <option value="user">User</option>
                        <option value="manager">Manager</option>
                        <option value="developer">Developer</option>
                    </select>
                </div>
            </div><br>
            
            <label><b>REASON FOR SUSPENSION</b></label>
            <p>Why do you want to suspend this user?</p>
            <textarea style="width: 100%" id="suspendReason" rows="6" class="form-control"></textarea>
            <button style="width: 100%" class="buttonStyle pink" onclick="suspendUser()">Suspend this User</button>
            <button style="width: 100%" class="buttonStyle blue" id="cancel4">Cancel</button>
        </div>
    </div>

    <!-- Confirmation modal for going back to dashboard -->
    <div id="modal9" class="modal">
        <div class="modal-body">
            <div class="together">
                <h2>Go Back</h2>
                <!-- Numbering the IDs so I can use many modals (code reuse) -->
                <span class="close" id="close9">&times;</span>
            </div>
            
            <!-- Confirmation message (for user control) -->
            <p>Are you sure you want to go back to the dashboard?</p>
            <button class="buttonStyle" onclick="window.location.href = '/'">Go Back</button>
            <button id='cancel9' class="buttonStyle">Cancel</button>
        </div>
    </div>

    <!-- The main content -->
    <% if (theuser.length == 0) { %>
        <!-- The main content if no user details are provided -->
         <main>
            <div style="background-color: white;">
                <section>
                    <div class="together align-items-center" style="justify-content: space-between;">
                        <div>
                            <h1>Error</h1>
                        </div>
                        <div>
                            <i class="fa fa-times" onclick="openModal(9)"></i>
                        </div>
                    </div>
                </section>
                <hr/>

                <section>
                    <p>Woops! Something went wrong. Please try again.</p>
                </section>
            </div>
        </main>
    <% } else { %>
        <!-- The main content if user details are provided -->
         <main>
            <div style="background-color: white;">
                <section>
                    <div class="together align-items-center" style="justify-content: space-between;">
                        <div>
                            <h1>User Page</h1>
                        </div>
                        <div>
                            <i class="fa fa-times" onclick="openModal(9)"></i>
                        </div>
                    </div>
                </section>
                <hr/>

                <% if (['manager', 'developer'].includes(role)) { %>
                    <section>
                        <div class="together" style="align-items: flex-start">
                            <div style="width: 100%">
                                <h2>Edit Name</h2>
                                <label><b>NEW NAME:</b></label>
                                <input type="text" id="newName" class="form-control" style="width: 100%" value="<%= theuser.name %>"><br>
                                <label><b>REASON FOR EDIT:</b></label>
                                <p>Why do you want to change their name? Briefly explain your changes.</p>
                                <textarea style="width: 100%" id="nameReason" rows="6" class="form-control"></textarea><br>
                                <div style="display: flex">
                                    <button class="buttonStyle pink" style="width: 100%" onclick="confirmName()">Confirm</button>
                                    <button class="buttonStyle blue" style="width: 100%" onclick="resetName()">Reset</button>
                                </div>
                            </div>
                            <div style="width: 100%">
                                <h2>Edit XP</h2>
                                <label><b>NEW XP:</b></label>
                                <input type="number" id="newXp" class="form-control" style="width: 100%" min=0 value="<%= theuser.xp %>"><br>
                                <label><b>REASON FOR EDIT:</b></label>
                                <p>Why do you want to change their XP? Briefly explain your changes.</p>
                                <textarea style="width: 100%" id="xpReason" rows="6" class="form-control"></textarea><br>
                                <div style="display: flex">
                                    <button class="buttonStyle pink" style="width: 100%" onclick="confirmXp()">Confirm</button>
                                    <button class="buttonStyle blue" style="width: 100%" onclick="resetXp()">Reset</button>
                                </div>
                            </div>
                        </div><br>
                        <div class="together" style="align-items: flex-start">
                            <div style="width: 100%">
                                <h2>Edit Role</h2>
                                <% if (theuser.role == 'developer' && role != 'developer') { %>
                                    <!-- can't edit the developer's role unless the user is a developer -->
                                    <p>Since this user is a developer and you aren't a developer, you aren't authorized
                                        to edit the roles of this user.
                                    </p>
                                <% } else { %>
                                    <label><b>NEW ROLE:</b></label>
                                    <p>If you want to suspend this user, head to the <a href="#dangerzone">Danger Zone</a> by scrolling down.</p>
                                    <select name="role" id="newRole" style="width: 100%" class="form-control">
                                        <option value="user">User</option>
                                        <option value="manager">Manager</option>
                                        <option value="developer">Developer</option>
                                    </select>
                                    <label><b>REASON FOR EDIT:</b></label>
                                    <p>Why do you want to change their role? Briefly explain your changes.</p>
                                    <textarea style="width: 100%" id="roleReason" rows="6" class="form-control"></textarea><br>
                                    <div style="display: flex">
                                        <button class="buttonStyle pink" style="width: 100%" onclick="confirmRole()">Confirm</button>
                                        <button class="buttonStyle blue" style="width: 100%" onclick="resetRole()">Reset</button>
                                    </div>
                                <% } %>
                            </div>
                            <div style="width: 100%">
                                <h2>Edit Grants Matched</h2>
                                <label><b>GRANTS MATCHED:</b></label>
                                <input type="number" id="newMatch" class="form-control" style="width: 100%" min=0 value="<%= theuser.grantsMatched %>"><br>
                                <label><b>REASON FOR EDIT:</b></label>
                                <p>Why do you want to change their number of grants matched? Briefly explain your changes.</p>
                                <textarea style="width: 100%" id="matchReason" rows="6" class="form-control"></textarea><br>
                                <div style="display: flex">
                                    <button class="buttonStyle pink" style="width: 100%" onclick="confirmMatch()">Confirm</button>
                                    <button class="buttonStyle blue" style="width: 100%" onclick="resetMatch()">Reset</button>
                                </div>
                            </div>
                        </div><br>
                    </section>
                    <hr>
                <% } %>

                <section>
                    <h2>INFORMATION</h2>

                    <div class="together align-items-center" style="justify-content: space-between;">
                        <div>
                            <h3>Name:</h3>
                            <h3>Email:</h3>
                            <h3>XP:</h3>
                            <h3>Role:</h3>
                            <h3>Grants Matched:</h3>
                            <h3>Date Joined:</h3>
                        </div>
                        <div style="text-align: right;">
                            <p><%= theuser.name %></p>
                            <p><%= theuser.email %></p>
                            <p><%= theuser.xp %></p>
                            <p><%= theuser.role %></p>
                            <p><%= theuser.grantsMatched %></p>
                            <p><%= theuser.dateJoined %></p>
                        </div>
                    </div>
                </section>
                <hr style="margin-bottom: 0">
            </div>

            <% if (['manager', 'developer'].includes(role) && theuser.role != 'developer') { %>
                <div style="padding-top: 10px; padding-bottom: 10px; height: 100%" id="dangerzone">
                    <section>
                        <h2>Danger Zone!</h2>
                        <button class="buttonStyle" style="background-color: red; color: white;" onclick="openModal(3)">Delete Account</button>
                        <button class="buttonStyle" style="background-color: rgb(255, 200, 0); color: rgb(0, 0, 0);" onclick="openModal(4)">Suspend User</button><br>
                    </section>
                </div>
            <% } %>
        </main>
    <% } %>
    
    <!-- EJS partial (for code reuse and efficiency) -->
    <%- footer %>

    <!-- Bootstrap for JS -->
    <script type="text/javascript" src="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/js/bootstrap.min.js"></script>
    <!-- This file allows for the user to interact with the elements on the site and for the site to give feedback to the user -->
    <script src="/script.js"></script>
    <!-- JQuery for the tooltip -->
    <script>
        $(function () {
  $('[data-toggle="tooltip"]').tooltip()
})
    </script>
    <script>
        // show alerts
        if ("<%= showAlert %>" != "no") {
            openModal(2);
        }
    </script>
    <script>
        <% if (theuser.length != 0) { %>
            function suspendUser() {
                // get user input
                reason = document.getElementById("suspendReason").value
                duration = document.getElementById("suspensionLength").value
                role = document.getElementById("suspensionRole").value

                // validate it
                if (reason.trim() == '' || reason.length < 10) {
                    document.getElementById('modal4').style.display = 'none'
                    document.getElementById("showAlert").textContent = 'The reason you provide for account deletion must be at least 10 characters long.'
                    openModal(2)
                    return
                }

                if (duration == '' || duration < 0) {
                    document.getElementById('modal4').style.display = 'none'
                    document.getElementById("showAlert").textContent = 'Your suspension duration is either missing or invalid. Please make sure it is positive.'
                    openModal(2)
                    return
                }

                if (role == '' || !['manager', 'developer', 'user'].includes(role)) {
                    document.getElementById('modal4').style.display = 'none'
                    document.getElementById("showAlert").textContent = 'Please make sure you provided a returning role after suspension. If you want indefinite suspension, just delete the user.'
                    openModal(2)
                    return
                }

                // turn the info into a json format
                data = {
                    'reason': reason,
                    'duration': duration,
                    'role': role,
                    "email": '<%= theuser.email %>'
                }

                // add the code to the database
                fetch('/suspend', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                }).then(response => response.json()).then(result => {
                    document.getElementById("modal4").style.display = 'none'
                    if (result.status == "error") {
                        // open the error modal if there is an error
                        console.log(result)
                        document.getElementById('showAlert').textContent = result.alert
                        openModal(2)
                    } else {
                        window.location.reload()
                    }
                })
            }

            function deleteAccount() {
                // get user input
                reason = document.getElementById("deleteReason").value

                // validate it
                if (reason.trim() == '' || reason.length < 10) {
                    document.getElementById('modal3').style.display = 'none'
                    document.getElementById("showAlert").textContent = 'The reason you provide for account deletion must be at least 10 characters long.'
                    openModal(2)
                    return
                }

                // turn the info into a json format
                data = {
                    'reason': reason,
                    "email": '<%= theuser.email %>'
                }

                // add the code to the database
                fetch('/deleteaccount', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                }).then(response => response.json()).then(result => {
                    document.getElementById("modal3").style.display = 'none'
                    if (result.status == "error") {
                        // open the error modal if there is an error
                        document.getElementById('modal3').style.display = 'none'
                        console.log(result)
                        document.getElementById('showAlert').textContent = result.alert
                        openModal(2)
                    } else {
                        window.location.reload()
                    }
                })
            }

            function confirmName() {
                // get user input
                name = document.getElementById("newName").value
                reason = document.getElementById("nameReason").value

                // validate it
                if (name.trim() == '' || name.length < 5 || reason.trim() == '' || reason.length < 5) {
                    document.getElementById("showAlert").textContent = 'Please make sure the details are valid before confirming. The name and reason should be at least 5 characters long.'
                    openModal(2)
                    return
                }

                // turn the info into a json format
                data = {
                    'name': name,
                    'reason': reason,
                    'email': '<%= theuser.email %>'
                }

                // add the code to the database
                fetch('/changename', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                }).then(response => response.json()).then(result => {
                    document.getElementById("modal3").style.display = 'none'
                    if (result.status == "error") {
                        // open the error modal if there is an error
                        console.log(result)
                        document.getElementById('showAlert').textContent = result.alert
                        openModal(2)
                    } else {
                        window.location.reload()
                    }
                })
            }

            function resetName() {
                // reset the input fields
                document.getElementById("newName").value = "<%= theuser.name %>"
                document.getElementById("nameReason").value = ""
            }

            function confirmXp() {
                // get user input
                xp = document.getElementById("newXp").value
                reason = document.getElementById("xpReason").value

                // validate it
                if (xp == '' || xp < 0 || reason.trim() == '' || reason.length < 5) {
                    document.getElementById("showAlert").textContent = 'Please make sure the details are valid before confirming. The XP should be positive and the reason should be at least 5 characters long.'
                    openModal(2)
                    return
                }

                // turn the info into a json format
                data = {
                    'xp': xp,
                    'reason': reason,
                    'email': '<%= theuser.email %>'
                }

                // add the code to the database
                fetch('/changexp', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                }).then(response => response.json()).then(result => {
                    document.getElementById("modal3").style.display = 'none'
                    if (result.status == "error") {
                        // open the error modal if there is an error
                        console.log(result)
                        document.getElementById('showAlert').textContent = result.alert
                        openModal(2)
                    } else {
                        window.location.reload()
                    }
                })
            }
            
            function resetXp() {
                // reset the input fields
                document.getElementById("newXp").value = "<%= theuser.xp %>"
                document.getElementById("xpReason").value = ""
            }

            function confirmRole() {
                // get user input
                role = document.getElementById("newRole").value
                reason = document.getElementById("roleReason").value

                // validate it
                if (!['manager', 'developer', 'user'].includes(role) || reason.trim() == '' || reason.length < 5) {
                    document.getElementById("showAlert").textContent = 'Please make sure the details are valid before confirming. The reason should be at least 5 characters long.'
                    openModal(2)
                    return
                }

                // turn the info into a json format
                data = {
                    'role': role,
                    'reason': reason,
                    'email': '<%= theuser.email %>'
                }

                // add the code to the database
                fetch('/changerole', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                }).then(response => response.json()).then(result => {
                    document.getElementById("modal3").style.display = 'none'
                    if (result.status == "error") {
                        // open the error modal if there is an error
                        console.log(result)
                        document.getElementById('showAlert').textContent = result.alert
                        openModal(2)
                    } else {
                        window.location.reload()
                    }
                })
            }

            function resetRole() {
                // reset the input fields
                document.getElementById("newRole").value = "<%= theuser.role %>"
                document.getElementById("roleReason").value = ""
            }

            function confirmMatch() {
                // get user input
                matches = document.getElementById("newMatch").value
                reason = document.getElementById("matchReason").value

                // validate it
                if (matches == '' || matches < 0 || reason.trim() == '' || reason.length < 5) {
                    document.getElementById("showAlert").textContent = 'Please make sure the details are valid before confirming. The reason should be at least 5 characters long and the number of grants matched should be a positive integer.'
                    openModal(2)
                    return
                }

                // turn the info into a json format
                data = {
                    'matches': matches,
                    'reason': reason,
                    'email': '<%= theuser.email %>'
                }

                // add the code to the database
                fetch('/changematches', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                }).then(response => response.json()).then(result => {
                    document.getElementById("modal3").style.display = 'none'
                    if (result.status == "error") {
                        // open the error modal if there is an error
                        console.log(result)
                        document.getElementById('showAlert').textContent = result.alert
                        openModal(2)
                    } else {
                        window.location.reload()
                    }
                })
            }

            function resetMatch() {
                // reset the input fields
                document.getElementById("newMatch").value = "<%= theuser.grantsMatched %>"
                document.getElementById("matchReason").value = ""
            }

            document.getElementById("newRole").value = "<%= theuser.role %>" // initialise role
        <% } %>
    </script>
</body>
</html>